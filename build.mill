//| mill-version: 1.0.3
//| mill-jvm-version: 17
//| mvnDeps: ["com.mchange::untemplate-mill:0.3.0-SNAPSHOT","com.mchange::mill-daemon:0.2.1-SNAPSHOT","com.lihaoyi::mill-contrib-buildinfo:$MILL_VERSION"]
//+-------------------------------------------------------------------------------------------------------------------------------------------------------

package build

import mill.*, scalalib.*, scalajslib.*
import mill.api.BuildCtx
import mill.scalajslib.api.ModuleKind
import mill.contrib.buildinfo.BuildInfo
import untemplate.mill.UntemplateModule
import com.mchange.milldaemon.DaemonModule

import scala.util.control.NonFatal

trait ProtopostScalaModule extends ScalaModule:
  override def scalaVersion = "3.7.2"
trait ProtopostScalaJSModule extends ProtopostScalaModule,ScalaJSModule:
  override def scalaJSVersion = "1.19.0"

object `package` extends UntemplateModule with DaemonModule with ProtopostScalaModule with BuildInfo:
  val protopostVersion = "0.0.1-SNAPSHOT"

  override def moduleDeps = Seq(shared.jvm)
  override def scalacOptions = Seq("-deprecation")

  override def runDaemonPidFile = defaultRunDaemonPidFile("protopost")

  def buildInfoMembers = Seq(
    BuildInfo.Value("version", protopostVersion)
  )
  def buildInfoPackageName = "protopost"

  val LogadapterScalaVersion = "0.0.2-SNAPSHOT"
  val TapirVersion           = "1.11.35"
  val JsoniterVersion        = "2.36.6"
  val mailutilVersion        = "0.0.5"
  val sttpVersion            = "4.0.9"

  def compileMvnDeps = Seq(
    mvn"com.github.plokhotnyuk.jsoniter-scala::jsoniter-scala-macros:${JsoniterVersion}",
  )

  def mvnDeps =
    super.mvnDeps() ++
    Seq(
      mvn"com.mchange::mill-daemon-util:0.2.0",  // don't forget to also update mill-daemon in build-level 'mvnDeps' above
      mvn"com.mchange:c3p0-loom:0.11.2",
      mvn"com.mchange::logadapter-scala-log4j2:$LogadapterScalaVersion",
      mvn"com.mchange::logadapter-scala-zio:$LogadapterScalaVersion",
      mvn"com.mchange::sqlutil-scala-zio:0.0.6-SNAPSHOT",
      mvn"com.mchange::mill-daemon-util:0.1.2",
      mvn"com.mchange::conveniences:0.0.6-SNAPSHOT",
      mvn"com.mchange::cryptoutil:0.0.3-SNAPSHOT",
      mvn"com.mchange::mailutil:${mailutilVersion}",
      mvn"com.mchange::rehash:0.0.1-SNAPSHOT",
      mvn"com.mchange::texttable:0.0.3",
      mvn"at.favre.lib:bcrypt:0.10.2",
      mvn"com.monovore::decline:2.5.0",
      mvn"org.postgresql:postgresql:42.7.7",
      mvn"org.bouncycastle:bcprov-jdk18on:1.81",
      mvn"com.auth0:java-jwt:4.5.0",
      mvn"com.softwaremill.sttp.tapir::tapir-core:$TapirVersion",
      mvn"com.softwaremill.sttp.tapir::tapir-files:$TapirVersion",
      mvn"com.softwaremill.sttp.tapir::tapir-zio-http-server:$TapirVersion",
      mvn"com.softwaremill.sttp.tapir::tapir-jsoniter-scala:$TapirVersion",
      mvn"com.github.plokhotnyuk.jsoniter-scala::jsoniter-scala-core:${JsoniterVersion}",
    )

  // modified from https://mill-build.org/mill/scalalib/web-examples.html
  override def resources = Task:
    os.makeDir(Task.dest / "scalajs")

    // switch back to fullLinkJS() when not actively developing the client
    //val jsPath = `scalajs-client`.fullLinkJS().dest.path
    val jsPath = `scalajs-client`.fastLinkJS().dest.path
    
    // Move main.js[.map]into the proper filesystem position
    // in the resource folder for the web server code to pick up
    os.copy(jsPath / "main.js", Task.dest / "scalajs/main.js")
    os.copy(jsPath / "main.js.map", Task.dest / "scalajs/main.js.map")
    super.resources() ++ Seq(PathRef(Task.dest))

  object `scalajs-client` extends ProtopostScalaJSModule:
    override def moduleDeps = Seq(shared.js)
    override def scalaVersion = build.scalaVersion
    //override def moduleKind = ModuleKind.ESModule
    override def mvnDeps =
      super.mvnDeps() ++
      Seq(
        mvn"com.raquo::laminar::17.2.1",
        mvn"com.softwaremill.sttp.client4::core::${sttpVersion}",
        mvn"com.softwaremill.sttp.client4::jsoniter::${sttpVersion}"
      )

  // modified from https://mill-build.org/mill/scalalib/web-examples.html
  object shared extends Module:
    trait SharedModule extends ProtopostScalaModule, PlatformScalaModule:
      def compileMvnDeps = Seq(
        mvn"com.github.plokhotnyuk.jsoniter-scala::jsoniter-scala-macros::${JsoniterVersion}"
      )
      def mvnDeps = Seq(
        mvn"com.github.plokhotnyuk.jsoniter-scala::jsoniter-scala-core::${JsoniterVersion}"
      )
    object jvm extends SharedModule:
      def mvnDeps = Seq(
        mvn"com.mchange::mailutil:${mailutilVersion}"
      )
    object js extends SharedModule, ProtopostScalaJSModule

  object `test-scalacheck` extends ScalaTests with TestModule.ScalaCheck:
    def mvnDeps = Seq(
      //mvn"com.lihaoyi::utest:0.8.5",
      mvn"org.scalacheck::scalacheck:1.18.1",
    )
    //def testFramework = "utest.runner.Framework"

